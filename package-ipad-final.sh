#!/bin/bash

# üì± PACKAGE FINAL IPAD - MYCONFORT
# =================================
# Cr√©ation du package final pour d√©ploiement iPad

echo "üì± PACKAGE FINAL IPAD - MYCONFORT"
echo "=================================="

# Variables
DESKTOP_PATH="$HOME/Desktop"
PACKAGE_NAME="MyConfort-iPad-Final-$(date +%Y%m%d-%H%M%S)"
PACKAGE_DIR="$DESKTOP_PATH/$PACKAGE_NAME"

# 1. V√©rification du build
if [ ! -d "dist" ]; then
    echo "‚ùå Erreur: Build non trouv√©. Ex√©cutez 'npm run build' d'abord."
    exit 1
fi

echo "‚úÖ Build trouv√©"

# 2. Cr√©ation du package
echo ""
echo "üì¶ Cr√©ation du package de d√©ploiement..."
mkdir -p "$PACKAGE_DIR"

# Copier le build
cp -r dist/* "$PACKAGE_DIR/"

# Copier netlify.toml (critique pour N8N)
cp netlify.toml "$PACKAGE_DIR/"

# 3. Cr√©er README avec avertissement N8N
cat > "$PACKAGE_DIR/README_DEPLOIEMENT_URGENT.md" << EOF
# üö® D√âPLOIEMENT IPAD MYCONFORT - ATTENTION N8N

## ‚ö†Ô∏è PROBL√àME CRITIQUE D√âTECT√â

### üî¥ Webhook N8N non accessible :
L'URL de webhook N8N actuelle ne r√©pond pas :
\`https://n8n.srv765811.hstgr.cloud/webhook/e7ca38d2-4b2a-4216-9c26-23663529790a\`

**Erreur:** 404 - Webhook not registered

### üõ†Ô∏è ACTIONS REQUISES AVANT D√âPLOIEMENT :

#### 1. V√©rifier le workflow N8N :
- Connectez-vous √† votre instance N8N
- V√©rifiez que le workflow est **ACTIF** (toggle en haut √† droite)
- V√©rifiez l'URL du webhook dans le node "Webhook"

#### 2. Corriger l'URL si n√©cessaire :
Si l'URL a chang√©, modifiez dans \`src/services/configService.ts\` :
\`\`\`typescript
webhookUrl: 'NOUVELLE_URL_WEBHOOK_N8N'
\`\`\`

#### 3. Rebuild si URL chang√©e :
\`\`\`bash
npm run build
\`\`\`

### üì± D√âPLOIEMENT NETLIFY :

1. **Glisser-d√©poser** ce dossier sur https://app.netlify.com
2. **Attendre** le d√©ploiement
3. **Tester** la connexion N8N dans la console iPad

### üß™ TEST SUR IPAD :

1. Ouvrir l'app dans Safari sur iPad
2. Ouvrir la console d√©veloppeur (R√©glages ‚Üí Safari ‚Üí Avanc√© ‚Üí Inspecteur Web)
3. Cr√©er une facture test
4. Envoyer par email
5. V√©rifier les logs :
   - ‚úÖ \`Using proxy URL: /api/n8n/webhook/facture-universelle\`
   - ‚ùå Si erreur 404 : Webhook N8N inactif

### üîß Configuration proxy (d√©j√† incluse) :
- ‚úÖ Proxy Netlify : \`/api/n8n/*\` ‚Üí \`https://n8n.srv765811.hstgr.cloud/\`
- ‚úÖ Headers CORS configur√©s
- ‚úÖ Auto-d√©tection environnement

### ‚ú® Nouvelles fonctionnalit√©s incluses :
- ‚úÖ Colonne statut livraison (Emport√©/√Ä livrer)
- ‚úÖ Couleurs visuelles distinctives
- ‚úÖ Affichage dynamique dans pr√©cisions de livraison
- ‚úÖ Validation non-bloquante
- ‚úÖ Interface tactile optimis√©e iPad
- ‚úÖ Tous les champs de statut envoy√©s √† N8N

### üìû Support :
Si probl√®me persiste :
1. V√©rifier l'√©tat du serveur N8N
2. Contacter l'administrateur N8N
3. V√©rifier les logs Netlify apr√®s d√©ploiement

**Build g√©n√©r√© le :** $(date)
**Status N8N :** ‚ö†Ô∏è Webhook inactif d√©tect√©
EOF

# 4. Cr√©er script de test N8N
cat > "$PACKAGE_DIR/test-n8n-depuis-app.js" << 'EOF'
// üß™ TEST N8N DEPUIS L'APPLICATION D√âPLOY√âE
// Copier-coller dans la console Safari sur iPad

console.log('üß™ TEST N8N DEPUIS IPAD');

// Test 1: Configuration d√©tect√©e
const debugInfo = {
  url: window.location.href,
  environment: 'production',
  expectedProxy: '/api/n8n/webhook/facture-universelle'
};
console.log('üì± Configuration iPad:', debugInfo);

// Test 2: Test proxy N8N
fetch('/api/n8n/healthz')
  .then(response => {
    console.log('‚úÖ Proxy N8N accessible:', response.status);
    return response.text();
  })
  .then(data => console.log('üìÑ R√©ponse:', data))
  .catch(error => console.error('‚ùå Erreur proxy N8N:', error));

// Test 3: Test webhook
fetch('/api/n8n/webhook/facture-universelle', {
  method: 'POST',
  headers: {'Content-Type': 'application/json'},
  body: JSON.stringify({test: 'ipad', source: 'app_test'})
})
  .then(response => {
    console.log('üì§ Test webhook:', response.status);
    return response.text();
  })
  .then(data => console.log('üì• R√©ponse webhook:', data))
  .catch(error => console.error('‚ùå Erreur webhook:', error));

console.log('‚ÑπÔ∏è Si erreurs 404 : V√©rifiez que le workflow N8N est ACTIF');
EOF

# 5. Cr√©er l'archive
cd "$DESKTOP_PATH"
zip -r "$PACKAGE_NAME.zip" "$PACKAGE_NAME/" -q

# 6. R√©sum√© final
echo ""
echo "‚úÖ PACKAGE IPAD CR√â√â !"
echo ""
echo "üìÇ Dossier: $PACKAGE_DIR"
echo "üóúÔ∏è  Archive: $DESKTOP_PATH/$PACKAGE_NAME.zip"
echo ""
echo "üö® ATTENTION: Webhook N8N inactif d√©tect√© !"
echo "‚ö†Ô∏è  V√©rifiez N8N avant d√©ploiement"
echo ""
echo "üìã Fichiers inclus:"
echo "   - Build de production optimis√© iPad"
echo "   - netlify.toml avec proxy N8N"
echo "   - README avec instructions urgentes"
echo "   - Script de test N8N pour iPad"
echo ""
echo "üöÄ INSTRUCTIONS:"
echo "1. ‚ö†Ô∏è  CORRIGER le workflow N8N d'abord"
echo "2. Glisser-d√©poser sur Netlify"
echo "3. Tester sur iPad"
echo ""
echo "üì± TOUTES LES FONCTIONNALIT√âS IPAD INCLUSES !"

# Afficher le contenu
echo ""
echo "üìÑ CONTENU DU PACKAGE:"
ls -la "$PACKAGE_DIR" | head -10
