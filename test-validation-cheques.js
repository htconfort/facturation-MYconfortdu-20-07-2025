#!/usr/bin/env node

/**
 * üß™ Test rapide de validation - Ch√®ques Ronds
 * V√©rifie que la logique est bien impl√©ment√©e
 */

console.log("üéØ VALIDATION : Syst√®me de Ch√®ques Ronds");
console.log("=" * 50);

// Cas de test r√©alistes pour l'activit√© MyConfort
const casDeTest = [
  { 
    scenario: "Matelas + Sommier", 
    total: 1289.90, 
    nCheques: 3,
    description: "Commande standard avec livraison"
  },
  { 
    scenario: "Pack Literie Premium", 
    total: 2456.75, 
    nCheques: 5,
    description: "Achat important, √©talement souhait√©"
  },
  { 
    scenario: "Oreiller Ergonomique", 
    total: 189.99, 
    nCheques: 2,
    description: "Petit achat, paiement simple"
  },
  { 
    scenario: "Ensemble Complet", 
    total: 3567.80, 
    nCheques: 6,
    description: "Gros achat, √©talement maximum"
  }
];

function calculerChequesRonds(totalTTC, nombreCheques) {
  // Montant par ch√®que arrondi √† l'entier
  let montantParCheque = Math.round(totalTTC / nombreCheques);
  let totalCheques = montantParCheque * nombreCheques;
  let acompte = totalTTC - totalCheques;
  
  // Protection contre acomptes n√©gatifs
  if (acompte < 0) {
    montantParCheque = Math.floor(totalTTC / nombreCheques);
    totalCheques = montantParCheque * nombreCheques;
    acompte = totalTTC - totalCheques;
  }
  
  return {
    acompte: Math.round(acompte * 100) / 100,
    montantParCheque,
    totalCheques,
    verification: Math.round((acompte + totalCheques) * 100) / 100
  };
}

casDeTest.forEach((cas, index) => {
  console.log(`\nüìã Cas ${index + 1}: ${cas.scenario}`);
  console.log(`   ${cas.description}`);
  console.log(`   Total facture: ${cas.total}‚Ç¨`);
  
  const result = calculerChequesRonds(cas.total, cas.nCheques);
  
  console.log(`   üìä R√©sultat:`);
  console.log(`      ‚Ä¢ Acompte: ${result.acompte}‚Ç¨`);
  console.log(`      ‚Ä¢ ${cas.nCheques} ch√®ques de: ${result.montantParCheque}‚Ç¨ chacun`);
  console.log(`      ‚Ä¢ Total v√©rifi√©: ${result.verification}‚Ç¨`);
  
  // Validations
  const montantEntier = Number.isInteger(result.montantParCheque);
  const acomptePositif = result.acompte >= 0;
  const totalCorrect = Math.abs(result.verification - cas.total) < 0.01;
  
  console.log(`   ‚úÖ Validations:`);
  console.log(`      ‚Ä¢ Ch√®ques entiers: ${montantEntier ? '‚úÖ' : '‚ùå'}`);
  console.log(`      ‚Ä¢ Acompte positif: ${acomptePositif ? '‚úÖ' : '‚ùå'}`);
  console.log(`      ‚Ä¢ Total correct: ${totalCorrect ? '‚úÖ' : '‚ùå'}`);
  
  if (montantEntier && acomptePositif && totalCorrect) {
    console.log(`   üéâ SUCC√àS - Configuration optimale !`);
  } else {
    console.log(`   ‚ö†Ô∏è  PROBL√àME D√âTECT√â`);
  }
});

console.log("\n" + "=" * 50);
console.log("üèÜ VALIDATION TERMIN√âE");
console.log("üí° Les ch√®ques √† venir seront toujours des montants ronds !");
console.log("üéØ L'exp√©rience client est grandement am√©lior√©e !");
