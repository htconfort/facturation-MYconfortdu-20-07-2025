#!/usr/bin/env node

/**
 * üîç DIAGNOSTIC N8N - PROBL√àME DE DOUBLON DE FACTURES
 * Le probl√®me : Une facture est envoy√©e mais une autre facture (ancienne) appara√Æt dans l'email
 */

const WEBHOOK_URL = 'https://n8n.srv765811.hstgr.cloud/webhook/facture-universelle';

async function testFactureUnique() {
  console.log('üîç DIAGNOSTIC N8N - PROBL√àME DOUBLON FACTURES');
  console.log('===============================================');
  console.log('Probl√®me identifi√© : Facture envoy√©e ‚â† Facture re√ßue par email');
  console.log('');

  // Test avec des donn√©es tr√®s sp√©cifiques et uniques
  const timestamp = Date.now();
  const uniqueId = Math.random().toString(36).substr(2, 9);
  
  const payloadTest = {
    // Donn√©es TR√àS sp√©cifiques pour identifier cette facture
    numero_facture: `TEST-${timestamp}`,
    nom_facture: `Facture_Test_Unique_${uniqueId}`,
    nom_du_client: `Client_Test_${timestamp}`,
    email_client: 'test@myconfort.com',
    
    // Donn√©es uniques pour v√©rification
    test_unique_id: uniqueId,
    test_timestamp: timestamp,
    test_marker: `FACTURE_TEST_${new Date().toISOString()}`,
    
    // Donn√©es de facture basiques
    montant_ht: 100.00,
    montant_tva: 20.00,
    montant_ttc: 120.00,
    
    // PDF test en base64
    fichier_facture: btoa(`FACTURE TEST UNIQUE - ${uniqueId} - ${timestamp}`),
    
    // M√©tadonn√©es
    date_creation: new Date().toISOString(),
    type_test: 'diagnostic_doublon'
  };

  console.log('üì¶ ENVOI DE FACTURE TEST UNIQUE');
  console.log('================================');
  console.log('Num√©ro facture:', payloadTest.numero_facture);
  console.log('ID unique:', payloadTest.test_unique_id);
  console.log('Timestamp:', payloadTest.test_timestamp);
  console.log('Nom client:', payloadTest.nom_du_client);
  console.log('');

  try {
    const response = await fetch(WEBHOOK_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(payloadTest, null, 2)
    });

    const responseText = await response.text();
    console.log('‚úÖ R√©ponse N8N:', response.status);
    console.log('üìÑ Contenu:', responseText);
    
    console.log('');
    console.log('üéØ V√âRIFICATIONS √Ä FAIRE MAINTENANT :');
    console.log('====================================');
    console.log('');
    console.log('1. üìß V√âRIFIEZ VOTRE EMAIL :');
    console.log(`   ‚Üí Recherchez une facture avec le num√©ro: ${payloadTest.numero_facture}`);
    console.log(`   ‚Üí Le client doit √™tre: ${payloadTest.nom_du_client}`);
    console.log(`   ‚Üí L'ID unique doit √™tre: ${payloadTest.test_unique_id}`);
    console.log('');
    console.log('2. üîç SI LE MAUVAIS EMAIL ARRIVE :');
    console.log('   ‚Üí Notez le num√©ro de facture re√ßu');
    console.log('   ‚Üí Notez le nom du client re√ßu');
    console.log('   ‚Üí Cela confirme un probl√®me de workflow N8N');
    console.log('');
    console.log('3. üõ†Ô∏è ACTIONS C√îT√â N8N :');
    console.log('   ‚Üí Connectez-vous √† https://n8n.srv765811.hstgr.cloud/');
    console.log('   ‚Üí Menu "Executions" ‚Üí Voir la derni√®re ex√©cution');
    console.log('   ‚Üí V√©rifiez que les bonnes donn√©es transitent entre les nodes');
    console.log('   ‚Üí Probl√®me probable : cache/buffer dans un node interm√©diaire');
    console.log('');
    console.log('4. üéØ NODES √Ä V√âRIFIER EN PRIORIT√â :');
    console.log('   ‚Üí Node qui stocke/lit les donn√©es (Google Drive, Database)');
    console.log('   ‚Üí Node Email (v√©rifier la source des donn√©es)');
    console.log('   ‚Üí Node de transformation/mapping des donn√©es');
    console.log('');

  } catch (error) {
    console.log('‚ùå Erreur:', error.message);
  }

  console.log('');
  console.log('üí° DIAGNOSTIC :');
  console.log('==============');
  console.log('‚úÖ Notre application g√©n√®re les bons num√©ros s√©quentiels');
  console.log('‚úÖ Notre application envoie les bonnes donn√©es √† N8N');
  console.log('‚ùå N8N semble traiter/stocker/r√©cup√©rer les mauvaises donn√©es');
  console.log('');
  console.log('üîß SOLUTION : Corriger le workflow N8N pour qu\'il traite');
  console.log('    les donn√©es de la requ√™te actuelle, pas d\'anciennes donn√©es cach√©es.');
}

// Ex√©cuter le test
testFactureUnique().catch(console.error);
